include gro
set ("dt", 0.1);
set("population_max", 400000);
set("signals", 1.0);
set("signals_draw", 1.0);
grid("continuous", "gro_original", 10, 10, 8);


s1:= s_signal([kdiff := 0.1, kdeg := 0.05]);

s2:= s_signal([kdiff := 0.1, kdeg := 0.05]);

s3:= s_signal([kdiff := 0.1, kdeg := 0.05]);

s4:= s_signal([kdiff := 0.1, kdeg := 0.05]);

s5:= s_signal([kdiff := 0.1, kdeg := 0.05]);

s6:= s_signal([kdiff := 0.1, kdeg := 0.05]);


genes([ name := "CallYellow",
	proteins := { "yellowSignal"},
	promoter:= [function := "AND", transcription_factors := { "bandRed","bandGreen"}],
	prot_act_times:= [times := { 15.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);
genes([ name := "CallGreen",
	proteins := { "greenSignal"},
	promoter:= [function := "AND", transcription_factors := { "bandRed","bandYellow"}],
	prot_act_times:= [times := { 15.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);
genes([ name := "CallRed",
	proteins := { "redSignal"},
	promoter:= [function := "AND", transcription_factors := { "bandYellow","bandGreen"}],
	prot_act_times:= [times := { 15.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "EmisorRed",
	proteins := { "liderSignalRed"},
	promoter:= [function := "YES", transcription_factors := { }],
	prot_act_times:= [times := { 0.1}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);


genes([ name := "NRFP",
	proteins := { "nRFP"},
	promoter:= [function := "YES", transcription_factors := { }],
	prot_act_times:= [times := { 0.1}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "RecNodeRFP",
	proteins := { "recNodeRFP"},
	promoter:= [function := "AND", transcription_factors := { "liderSignalRedLow","-nRFP"}],
	prot_act_times:= [times := { 3.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "ColorRFP",
	proteins := { "colorRFP"},
	promoter:= [function := "YES", transcription_factors := { "recNodeRFP"}],
	prot_act_times:= [times := { 3.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "SelectLiderRed",
	proteins := { "retardLiderRed"},
	promoter:= [function := "AND", transcription_factors := { "selectLiderRed", "-restrictSignalRed"}],
	prot_act_times:= [times := { 50.0}, variabilities:= { 15.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
	]);

genes([ name := "RetardSelectLiderRed",
	proteins := { "activateLiderRed","liderSignalRed"},
	promoter:= [function := "AND", transcription_factors := { "retardLiderRed", "-restrictSignalRed"}],
	prot_act_times:= [times := { 1.0,1.0}, variabilities:= { 0.0,0.0}],
	prot_deg_times:= [times := { 0.1,0.1}, variabilities:= { 0.0,0.0}]
    ]);

genes([ name := "Iniciator",
	proteins := { "liderSignalRed","liderSignalGreen","liderSignalYellow"},
	promoter:= [function := "YES", transcription_factors := { }],
	prot_act_times:= [times := { 1.0,1.0,1.0}, variabilities:= { 0.0,0.0,0.0}],
	prot_deg_times:= [times := { 0.1,0.1,0.1}, variabilities:= { 0.0,0.0,0.0}]
    ]);

genes([ name := "RepLiderRed",
	proteins := { "repLiderRed"},
	promoter:= [function := "YES", transcription_factors := { }],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "LiderSignalRed",
	proteins := { "liderSignalRed"},
	promoter:= [function := "NOT", transcription_factors := { "repLiderRed"}],
	prot_act_times:= [times := { 3.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "DeadRed",
	proteins := { "deadRed"},
	promoter:= [function := "YES", transcription_factors := { "bandRed"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "LacMRed",
	proteins := { "lacMRed"},
	promoter:= [function := "YES", transcription_factors := { "liderSignalRedHigh"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "CIRed",
	proteins := { "cIRed"},
	promoter:= [function := "YES", transcription_factors := { "liderSignalRedLow"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "LacRed",
	proteins := { "lacRed"},
	promoter:= [function := "NOT", transcription_factors := { "cIRed"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "BandRed",
	proteins := { "bandRed"},
	promoter:= [function := "AND", transcription_factors := { "-lacMRed", "-lacRed"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "EmisorGreen",
	proteins := { "liderSignalGreen"},
	promoter:= [function := "YES", transcription_factors := { }],
	prot_act_times:= [times := { 0.1}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "NGFP",
	proteins := { "nGFP"},
	promoter:= [function := "YES", transcription_factors := { }],
	prot_act_times:= [times := { 0.1}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "RecNodeGFP",
	proteins := { "recNodeGFP"},
	promoter:= [function := "AND", transcription_factors := { "liderSignalGreenLow","-nGFP"}],
	prot_act_times:= [times := { 3.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "ColorGFP",
	proteins := { "colorGFP"},
	promoter:= [function := "YES", transcription_factors := { "recNodeGFP"}],
	prot_act_times:= [times := { 3.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "SelectLiderGreen",
	proteins := { "retardLiderGreen"},
	promoter:= [function := "AND", transcription_factors := { "selectLiderGreen", "-restrictSignalGreen"}],
	prot_act_times:= [times := { 5.0}, variabilities:= { 70.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);


genes([ name := "RetardSelectLiderGreen",
	proteins := { "activateLiderGreen","liderSignalGreen"},
	promoter:= [function := "AND", transcription_factors := { "retardLiderGreen", "-restrictSignalGreen"}],
	prot_act_times:= [times := { 1.0,1.0}, variabilities:= { 0.0,0.0}],
	prot_deg_times:= [times := { 0.1,0.1}, variabilities:= { 0.0,0.0}]
    ]);

genes([ name := "RepLiderGreen",
	proteins := { "repLiderGreen"},
	promoter:= [function := "YES", transcription_factors := { }],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "LiderSignalGreen",
	proteins := { "liderSignalGreen"},
	promoter:= [function := "NOT", transcription_factors := { "repLiderGreen"}],
	prot_act_times:= [times := { 3.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "DeadGreen",
	proteins := { "deadGreen"},
	promoter:= [function := "YES", transcription_factors := { "bandGreen"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "LacMGreen",
	proteins := { "lacMGreen"},
	promoter:= [function := "YES", transcription_factors := { "liderSignalGreenHigh"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);
genes([ name := "CIGreen",
	proteins := { "cIGreen"},
	promoter:= [function := "YES", transcription_factors := { "liderSignalGreenLow"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);
genes([ name := "LacGreen",
	proteins := { "lacGreen"},
	promoter:= [function := "NOT", transcription_factors := { "cIGreen"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);
genes([ name := "BandGreen",
	proteins := { "bandGreen"},
	promoter:= [function := "AND", transcription_factors := { "-lacMGreen", "-lacGreen"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "EmisorYellow",
	proteins := { "LiderSignalYellow"},
	promoter:= [function := "YES", transcription_factors := { }],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "NYFP",
	proteins := { "nYFP"},
	promoter:= [function := "YES", transcription_factors := { }],
	prot_act_times:= [times := { 0.1}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "RecNodeYFP",
	proteins := { "recNodeYFP"},
	promoter:= [function := "AND", transcription_factors := { "liderSignalYellowLow","-nYFP"}],
	prot_act_times:= [times := { 3.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "ColorYFP",
	proteins := { "colorYFP"},
	promoter:= [function := "YES", transcription_factors := { "recNodeYFP"}],
	prot_act_times:= [times := { 3.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "SelectLiderYellow",
	proteins := { "retardLiderYellow"},
	promoter:= [function := "AND", transcription_factors := { "selectLiderYellow", "-restrictSignalYellow"}],
	prot_act_times:= [times := { 5.0}, variabilities:= { 70.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);


genes([ name := "RetardSelectLiderYellow",
	proteins := { "activateLiderYellow","liderSignalYellow"},
	promoter:= [function := "AND", transcription_factors := { "retardLiderYellow", "-restrictSignalYellow"}],
	prot_act_times:= [times := { 1.0,1.0}, variabilities:= { 0.0,0.0}],
	prot_deg_times:= [times := { 0.1,0.1}, variabilities:= { 0.0,0.0}]
    ]);

genes([ name := "RepLiderYellow",
	proteins := { "repLiderYellow"},
	promoter:= [function := "YES", transcription_factors := { }],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "LiderSignalYellow",
	proteins := { "liderSignalYellow"},
	promoter:= [function := "NOT", transcription_factors := { "repLiderYellow"}],
	prot_act_times:= [times := { 3.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);


genes([ name := "DeadYellow",
	proteins := { "deadYellow"},
	promoter:= [function := "YES", transcription_factors := { "bandYellow"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "LacMYellow",
	proteins := { "lacMYellow"},
	promoter:= [function := "YES", transcription_factors := { "liderSignalYellowHigh"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "CIYellow",
	proteins := { "cIYellow"},
	promoter:= [function := "YES", transcription_factors := { "liderSignalYellowLow"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "LacYellow",
	proteins := { "lacYellow"},
	promoter:= [function := "NOT", transcription_factors := { "cIYellow"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);

genes([ name := "BandYellow",
	proteins := { "bandYellow"},
	promoter:= [function := "AND", transcription_factors := { "-lacMYellow", "-lacYellow"}],
	prot_act_times:= [times := { 1.0}, variabilities:= { 0.0}],
	prot_deg_times:= [times := { 0.1}, variabilities:= { 0.0}]
    ]);


plasmids_genes([pEmisorRed := { "EmisorRed"},
                        pRepLiderRed:= { "RepLiderRed"},
                    pEmisorGreen:= { "EmisorGreen"},
                        pRepLiderGreen:= { "RepLiderGreen"},
                    pEmisorYellow:= { "EmisorYellow"},
                        pRepLiderYellow:= { "RepLiderYellow"},
                    pDeads:= { "DeadYellow", "DeadGreen", "DeadRed"},
                    pLiders:= { "RetardSelectLiderYellow","RetardSelectLiderGreen","RetardSelectLiderRed","SelectLiderRed", "LiderSignalRed","SelectLiderGreen", "LiderSignalGreen", "SelectLiderYellow", "LiderSignalYellow"},  
					pColorGreen:= { "NGFP"},
					pColorRed:= { "NRFP"},
					pColorYellow:= { "NYFP"},
					pColors:= { "ColorYFP","ColorGFP","ColorRFP","RecNodeYFP","RecNodeRFP","RecNodeGFP"},
					pBand:= {
	"CallRed", "CallGreen","CallYellow",
                    "LacMRed", "CIRed", "LacRed", "BandRed", 
                    "LacMGreen", "CIGreen", "LacGreen", "BandGreen", 
                    "LacMYellow", "CIYellow", "LacYellow", "BandYellow"

					}
            ]);


action({ "colorRFP"},"d_paint",{ "0","1","0","0"});
action({ "-colorRFP"},"d_paint",{ "0","-1","0","0"});

action({ "colorGFP"},"d_paint",{ "1","0","0","0"});
action({ "-colorGFP"},"d_paint",{ "-1","0","0","0"});

action({ "colorYFP"},"d_paint",{ "0","0","1","0"});
action({ "-colorYFP"},"d_paint",{ "0","0","-1","0"});


action({ "redSignal"},"s_emit_signal",{ tostring(s1),"0.1", "exact"});

action({ "liderSignalRed"},"s_emit_signal",{ tostring(s2),"0.05", "exact"});

action({ "greenSignal"},"s_emit_signal",{ tostring(s3),"0.1", "exact"});

action({ "liderSignalGreen"},"s_emit_signal",{ tostring(s4),"0.05", "exact"});

action({ "yellowSignal"},"s_emit_signal",{ tostring(s5),"0.1", "exact"});

action({ "liderSignalYellow"},"s_emit_signal",{ tostring(s6),"0.05", "exact"});


action({ },"s_get_QS",{ tostring(s1),">","0.001","selectLiderRed"});
action({ },"s_get_QS",{ tostring(s2),">","0.01","liderSignalRedLow"});//Cambiarle el nombre a señal de nodo?
action({ },"s_get_QS",{ tostring(s2),">","0.1","liderSignalRedHigh"});
action({ },"s_get_QS",{ tostring(s2),">","0.00005","restrictSignalRed"});
action({ },"s_get_QS",{ tostring(s3),">","0.001","selectLiderGreen"});
action({ },"s_get_QS",{ tostring(s4),">","0.01","liderSignalGreenLow"});
action({ },"s_get_QS",{ tostring(s4),">","0.1","liderSignalGreenHigh"});
action({ },"s_get_QS",{ tostring(s4),">","0.00005","restrictSignalGreen"});
action({ },"s_get_QS",{ tostring(s5),">","0.001","selectLiderYellow"});
action({ },"s_get_QS",{ tostring(s6),">","0.01","liderSignalYellowLow"});
action({ },"s_get_QS",{ tostring(s6),">","0.1","liderSignalYellowHigh"});
action({ },"s_get_QS",{ tostring(s6),">","0.00005","restrictSignalYellow"});

action({ "activateLiderRed"}, "lose_plasmid", { "pRepLiderRed"});
action({ "activateLiderRed"}, "lose_plasmid", { "pDeads"});

action({ "deadRed"}, "lose_plasmid", { "pLiders"} );
action({ "deadRed"}, "lose_plasmid", { "pDeads"} );
action({ "deadRed"}, "lose_plasmid", { "pColorRed"} );

action({ "activateLiderGreen"}, "lose_plasmid", { "pRepLiderGreen"});
action({ "activateLiderGreen"}, "lose_plasmid", { "pDeads"});

action({ "deadGreen"}, "lose_plasmid", { "pLiders"} );
action({ "deadGreen"}, "lose_plasmid", { "pDeads"} );
action({ "deadGreen"}, "lose_plasmid", { "pColorGreen"} );

action({ "activateLiderYellow"}, "lose_plasmid", { "pRepLiderYellow"});
action({ "activateLiderYellow"}, "lose_plasmid", { "pDeads"});

action({ "deadYellow"}, "lose_plasmid", { "pLiders"} );
action({ "deadYellow"}, "lose_plasmid", { "pDeads"} );
action({ "deadYellow"}, "lose_plasmid", { "pColorYellow"} );

action({ },"set_growth_rate",{ "0.000"});

route1:= "\";
filename1:= "Conteos.csv";
fp1:= fopen(route1<> filename1, "w");


program p() :=
{
	skip();
};


program main() :=  {
	c_ecolis(1, 0, 0, 80, { "pEmisorGreen"}, program p());
	c_ecolis(1, 0, 0, 80, { "pEmisorRed"}, program p());
	c_ecolis(1000, 0, 0, 80, { "pRepLiderRed","pRepLiderGreen","pRepLiderYellow" ,"pLiders","pBand", "pDeads","pColors","pColorYellow","pColorGreen","pColorRed"}, program p());
	//funciona entrega el valor de color RFP :o
	true :{
		dump_multiple(fp1,{ "colorRFP"},{ "colorGFP"},{ "colorYFP"});
	}
};